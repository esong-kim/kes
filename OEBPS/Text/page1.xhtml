<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" lang="ko">
    <head>
        <title>알고리즘의 기초</title>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link  href="../Styles/style1.css" rel="stylesheet" type="text/css"/>
    </head>

    <body>
        <nav epub:type="toc" id="toc">
            <h2>목차</h2>
            <ol>
                <li><a href="page1.xhtml">알고리즘의 기초</a></li>
                <li><a href="page2.xhtml">프로그래밍의 기초</a></li>
            </ol>
        </nav>
        <section aria-labelledby="algorithms-title">
            <h1 id="algorithms-title">알고리즘의 기초</h1>
            <article>
                <h2>알고리즘이란 무엇인가?</h2>
                <p>알고리즘은 <strong>문제를 해결하기 위한 방법과 절차</strong>를 의미합니다. 정확하지 않거나 논리적이지 못한 방법으로는 문제를 해결할 수 없거나 잘못된 결과가 나올 수 있기 때문에 알고리즘은 중요합니다.</p>
                <h2>알고리즘 설계 과정</h2>
                <p>컴퓨터로 문제를 해결하려면 문제 상황을 <strong>정확하게 이해하고 분석</strong>하여 현재 상태와 목표 상태를 명확하게 정의한 후, 문제를 해결하기 위해 수행해야 할 작업의 종류와 순서를 파악해야 합니다. 복잡한 문제는 <strong>작은 문제로 나누어</strong> 생각하고 문제 해결에 필요한 <strong>핵심 요소를 추출</strong>하는 <strong>추상화</strong> 과정을 거쳐 알고리즘을 설계합니다. 같은 문제라도 문제 해결을 위한 알고리즘은 여러 가지 존재할 수 있으며, <strong>효율적인 알고리즘</strong>이 좋은 알고리즘으로 간주됩니다.</p>
                <h2>알고리즘이 갖춰야 할 요건</h2>
                <ul>
                    <li><strong>입력과 출력:</strong> 입력은 없을 수도 있지만, 출력은 반드시 하나 이상이어야 합니다. 프로그램 실행에 필요한 값을 입력받고, 처리 과정을 통해 최종 결과물이나 상태를 구하는 것입니다.</li>
                    <li><strong>명확성:</strong> 명령의 의미가 명확해야 합니다. 알고리즘의 각 단계에 대한 설명은 무엇을 하기 위한 것인지 명확하게 표현되어야 합니다.</li>
                    <li><strong>유한성:</strong> 무한 반복되지 않고 언젠가는 종료되어야 합니다.</li>
                    <li><strong>수행 가능성:</strong> 모든 명령이 수행 가능한 것이어야 합니다.</li>
                </ul>
                <h2>알고리즘 표현 방법</h2>
                <p>알고리즘은 말이나 글, 그림 또는 순서도, 스토리보드 등 다양한 방법으로 표현할 수 있습니다.</p>
                <h2>알고리즘과 프로그래밍</h2>
                <p>컴퓨터를 이용한 문제 해결 과정에서는 컴퓨터에서 실행할 수 있도록 설계된 <strong>알고리즘을 바탕으로 프로그래밍 언어를 이용하여 프로그램</strong>을 작성합니다. 프로그램은 알고리즘에 따라 동작합니다.</p>
            </article>
        </section>

        <h1>알고리즘의 응용 분야</h1>

        <p>알고리즘은 정보 사회에서 매우 중요한 가치를 지니며, 다양한 분야에 응용됩니다. 컴퓨팅 시스템은 알고리즘에 따라 자동으로 계산하며 문제를 해결합니다.</p>

        <h2>일상생활 속 자동화 시스템:</h2>
        <ul>
            <li><strong>자율 주행 자동차:</strong> 레이저 센서, 카메라, 방향 센서, 레이더 등으로 교통 상황을 감지하고 중앙 컴퓨터가 정보를 분석·처리하여 스스로 운전합니다. 운전자 없이 목표 지점까지 스스로 주행 환경을 인식해서 움직입니다.</li>
            <li><strong>스마트 빌딩:</strong> 냉난방, 조명 등이 자동으로 조절되고 안전하고 편리한 환경을 제공합니다.</li>
            <li><strong>스마트 모빌리티:</strong> 전기로 움직이는 개인 이동 수단입니다.</li>
            <li><strong>로봇 청소기:</strong> 무작위(랜덤)로 움직이거나 쓰레기를 수거하며 청소하는 알고리즘 등을 통해 집안 곳곳을 청소합니다.</li>
            <li><strong>전자 투표 시스템:</strong> 센서 보드를 이용해 후보를 고르고 투표 결과를 바로 알 수 있는 시스템을 구현할 수 있습니다.</li>
            <li><strong>교통 시스템:</strong> 실시간으로 차량 흐름을 분석해 교통 혼잡을 줄이거나 교통량에 따라 신호가 자동으로 변경되는 시스템 등에 활용됩니다.</li>
            <li><strong>주차 유도 시스템:</strong> 센서가 자동차의 유무 등을 인식하여 빈 곳을 찾아주어 주차 시간을 절약하고 매연을 줄여줍니다.</li>
        </ul>

        <h2>문제 해결 및 데이터 처리:</h2>
        <ul>
            <li><strong>수학 공식 계산:</strong> 자동으로 수학 공식을 적용하여 계산해 주는 프로그램을 작성할 수 있습니다. 두 수의 사칙 연산을 계산하는 프로그램을 만들 수 있습니다.</li>
            <li><strong>정보 관리 및 구조화:</strong> 수많은 자료와 정보 중에서 필요한 정보를 찾아 활용하는 능력이 중요하며, 응용 소프트웨어를 활용하여 수집한 자료를 목적에 맞게 분류하고 관리할 수 있습니다. 정보를 효율적으로 처리하고 관리하기 위해 자료를 정리하고 재배치하는 정보 구조화에 표, 그래프, 계층형 등 다양한 방법이 사용됩니다.</li>
            <li><strong>로봇 저널리즘:</strong> 인터넷상의 자료를 수집·정리한 후 알고리즘을 통해 분류하고 의미를 해석하여 기사를 자동으로 작성합니다.</li>
        </ul>

        <h2>게임 및 콘텐츠 제작:</h2>
        <ul>
            <li><strong>게임 개발:</strong> 게임 내 캐릭터(오브젝트)의 움직임, 아이템 동작, 게임 규칙 구현 등에 알고리즘이 사용됩니다. 예를 들어 미로 탈출 게임의 주인공 이동, 장애물 배치, 도착 판정 알고리즘, 참참참 게임의 승패 판정 알고리즘, 토끼와 거북 경주 게임의 동물 이동 및 승리 판정 알고리즘 등이 있습니다.</li>
            <li><strong>음악 연주 프로그램:</strong> 악기 소리를 연주하는 프로그램, 창의적인 음악 연주 프로그램, 드럼 연주 프로그램 등을 만들 수 있습니다.</li>
            <li><strong>무늬 꾸미기 프로그램:</strong> 반복 구조와 선택 구조를 활용하여 무늬를 꾸미는 프로그램을 만들 수 있습니다.</li>
        </ul>

        <h2>피지컬 컴퓨팅:</h2>
        <p>사물의 정보를 입력받고 프로그램으로 각종 기기들을 작동시키는 피지컬 컴퓨팅에 알고리즘이 활용됩니다. 센서 보드와 다양한 센서(버튼, 소리 센서, 빛 센서, 슬라이더, 초음파 센서 등)로부터 주변 환경 변화(빛, 소리 등)를 감지하여 제어 프로그램을 작성할 수 있습니다. 센서 기반 피지컬 컴퓨팅 시스템은 문제를 이해 및 분석하고, 입출력을 설계하며, 알고리즘을 설계한 후 프로그램을 구현하는 과정을 거칩니다. (예: 어두울 때 전등 켜기, 소음 측정기 만들기).</p>
    </body>
</html>